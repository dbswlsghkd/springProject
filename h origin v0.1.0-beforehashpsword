[33mf920f4f[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;33mtag: [m[1;33mv0.1.0-beforehashpsword[m[33m, [m[1;31morigin/master[m[33m)[m 로그인 시 비밀번호 복호화 후 비교하여 로그인 하기 전
[33mfda6137[m BCrypt 사용하여 회원가입 시 비밀번호 해시 암호화 완료
[33mc2b3ea7[m 비밀번호 해시 암호화 방식 BCryptPasswordEncoder Bean으로 등록
[33mc8092c0[m formLogin, csrf 적용 후 잘못된 접근일 경우 로그인 페이지로 이동하도록 변경
[33m121d918[m spring security config 적용
[33mcd7faae[m 거래업체관리 데이터 조회 메뉴 추가 완료
[33m40ba948[m @query 어노테이션 공부 및 적용
[33m72d1216[m 품번관리 메뉴 페이징 처리 UI, 백엔드 연동 작업 완료
[33m2f2ed79[m 품번관리 메뉴 페이징 처리 백엔드 구현 완료
[33m2a10fdc[m 버튼 디자인 수정
[33m0e8e26f[m 품번관리 검색 버튼 클릭 시 품번, 품명, 규격 유사한 단어 조회 가능하도록 추가
[33m0dcb48f[m 품번관리 검색바 추가
[33mc8e28d1[m 품번관리 쿼리 적용하여 100개까지만 조회 하도록 수정
[33mdd745e9[m 회원가입 시 로그인 페이지로 이동, 로그인, 글쓰기 테스트 완료
[33mcc1652f[m 회원가입 로직 개발 완료
[33m589933d[m 회원가입 페이지 구현, GetMapping 연결
[33m62931a0[m thymeleaf 사용하여 세션 관리
[33m147e73f[m 로그인 성공 시 article 페이지로 이동하도록 개발 완료
[33m88da2c5[m 로그인 로직 구현중 / service까지 쿼리 조회하여 id 값 받아오는 부분 확인
[33m33dcc32[m 로그인 UI, controller, api, dto, repository, service 추가
[33m27aa379[m 프로그램 UI 개선 및 테스트 완료
[33m6e52b4c[m 등록일자 추가, @PrePersist 어노테이션 사용하여 기본값 설정
[33ma07c640[m 품번관리 메뉴, 사이드메뉴 UI 추가
[33m6f02432[m db 데이터 유지, 초기화 관련 소스 수정
[33ma27f3fa[m 댓글 삭제(js) 기능 추가
[33mf8e93f3[m 댓글 수정(js) 기능 추가
[33m79ca9e1[m 댓글 등록(js) 사용
[33m6f2b5c8[m 댓글 목록 뷰 만들기
[33mfff8447[m 댓글 REST API 컨트롤러와 서비스 구현
[33md45b59f[m Articel 서비스 검증 테스트 코드 작성
[33m9575209[m 서비스계층 추가, 기존 REST API 리팩터링 / 트랜잭션 사용
[33m296031f[m Article 데이터 CRUD를 위한, REST API 생성 후 postman으로 테스트
[33mb32a899[m data.sql 추가, id 자동 채번
[33mb0e59a8[m 데이터 수정, 삭제하기
[33m51f9d4c[m 링크와 리다이렉트를 통한 페이지간 이동 연결
[33mc8688cf[m 데이터 목록 조회
[33m82e50ab[m lombok으로 리팩터링, log 남기기
[33mb4db149[m 데이터 생성과 JPA
[33mbd3ddd2[m Form 데이터 주고 받기
[33mc689d89[m 뷰 템플릿과 레이아웃
[33m684e3ab[m MVC 역할과 실행 흐름
[33m01d8f12[m 뷰 템플릿과 MVC 패턴
[33m71f0c98[m 스프링 개발환경 셋팅
